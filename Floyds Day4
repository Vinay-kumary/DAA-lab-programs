Skip to content
Product
Solutions
Open Source
Pricing
Search
Sign in
Sign up
vivek1567
/
design-and-analysis-of-algorithms
Public
Code
Issues
Pull requests
Actions
Projects
Security
Insights
design-and-analysis-of-algorithms/33 floyds algorithm
@vivek1567
vivek1567 output
â€¦
Latest commit ed94abc on Oct 7, 2022
 History
 1 contributor
41 lines (37 sloc)  907 Bytes

#include <stdio.h>
#define nV 4
#define INF 999

void printMatrix(int matrix[][nV]);
void floydWarshall(int graph[][nV]) {
  int matrix[nV][nV], i, j, k;

  for (i = 0; i < nV; i++)
    for (j = 0; j < nV; j++)
      matrix[i][j] = graph[i][j];
  for (k = 0; k < nV; k++) {
    for (i = 0; i < nV; i++) {
      for (j = 0; j < nV; j++) {
        if (matrix[i][k] + matrix[k][j] < matrix[i][j])
          matrix[i][j] = matrix[i][k] + matrix[k][j];
      }
    }
  }
  printMatrix(matrix);
}

void printMatrix(int matrix[][nV]) {
  for (int i = 0; i < nV; i++) {
    for (int j = 0; j < nV; j++) {
      if (matrix[i][j] == INF)
        printf("%4s", "INF");
      else
        printf("%4d", matrix[i][j]);
    }
    printf("\n");
  }
}

int main() {
  int graph[nV][nV] = {{0, 3, INF, 5},
             {2, 0, INF, 4},
             {INF, 1, 0, INF},
             {INF, INF, 2, 0}};
  floydWarshall(graph);
}
